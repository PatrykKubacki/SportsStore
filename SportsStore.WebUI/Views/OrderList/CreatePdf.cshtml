@using System.Globalization
@using SportsStore.Domain.Data
@model IEnumerable<OrderList>
@{
    Layout = null;
}

<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>CreatePdf</title>
    <link rel="stylesheet" href="~/Content/bootstrap.css" />
    <link rel="stylesheet" href="~/Content/bootstrap-theme.css" />
    <link rel="stylesheet" href="~/Content/Site.css" />
</head>
<body>
<div class="container">
    <div class="row">
        <div class="col-xs-4 col-xs-push-6">
            <h3>Faktura</h3>
            <h4>@Model.FirstOrDefault().Order.Name</h4>
        </div>
    </div><br/>

    <div class="row">
        <div class="col-xs-4 col-xs-push-6">
            <p>
                Zamówienie z dnia: @Model.FirstOrDefault().Order.Date.ToShortDateString()<br/>
                Termin zapłaty: @Model.FirstOrDefault().Order.Date.AddDays(10).ToShortDateString()</p>
        </div>
    </div><br/>

    <div class="row">
        <div class="col-xs-6">
            <h4>Sprzedawca</h4>
            <p>
                SportsStore Company
            </p>
        </div>

        <div class="col-xs-6">
            <h4>Nabywca</h4>
            <p>
                @Model.FirstOrDefault().Order.User.FirstName @Model.FirstOrDefault().Order.User.LastName<br/>
                @Model.FirstOrDefault().Order.User.Address.Code @Model.FirstOrDefault().Order.User.Address.City.Name<br/>
                @Model.FirstOrDefault().Order.User.Address.Street @Model.FirstOrDefault().Order.User.Address.Number<br/>
            </p>
        </div>
    </div>

    <div class="row">
        <div class="col-xs-10">
            <h4>Transakcja</h4>
            @{
                <table class="table table-bordered">
                    <tr class="success" >
                        <th>Nazwa towary lub usługi</th>
                        <th>ilość</th>
                        <th>Jednostka</th>
                        <th>Wartość netto</th>
                        <th>Vat %</th>
                        <th>Vat</th>
                        <th>Wartość brutto</th>
                    </tr>


                    @foreach (var item in Model) {
                        <tr>
                            <td>@item.Product.Name</td>
                            <td>@item.Quantity</td>
                            <td>szt.</td>
                            <td>@(((double)item.Product.Price * 0.77 * item.Quantity).ToString("C", CultureInfo.CreateSpecificCulture("pl")))</td>
                            <td>23%</td>
                            <td>@(((double)item.Product.Price * 0.23 * item.Quantity).ToString("C", CultureInfo.CreateSpecificCulture("pl")))</td>
                            <td>@((item.Product.Price*item.Quantity).ToString("C", CultureInfo.CreateSpecificCulture("pl")))</td>
                        </tr>
                    }
                </table>
                <h4>Razem do zapłaty: @GetTotalValue(Model).ToString("C", CultureInfo.CreateSpecificCulture("pl"))</h4>
            }
        </div>
    </div>
    <br/> <br/> <br/>
    <div class="row">
        <div class="col-xs-6">
            <h4>......................................................................</h4>
            <p>
                Osoba upoważniona do odbioru 
            </p>
        </div>

        <div class="col-xs-6">
            <h4>......................................................................</h4>
            <p>
               Osoba upoważniona do wystawienia 
            </p>
        </div>
    </div>

    @functions {
        double GetTotalValue(IEnumerable<OrderList> orders) {
            return orders.Sum(item => (double)item.Product.Price * item.Quantity);
        }
    }

</div>
</body>
</html>
